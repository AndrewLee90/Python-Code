import googletrans  # googletrans 모듈을 import하여 텍스트 번역 기능을 사용합니다.
translator = googletrans.Translator()  # Translator 객체를 생성합니다.

str1 = "오늘 너무 추운것 같아"  # 번역할 텍스트를 설정합니다.
try:
    result1 = translator.translate(str1, dest='ja', src='auto')
    # translate()를 사용해 str1을 일본어('ja')로 번역하며, 원본 언어는 자동 감지('auto')로 설정합니다.
    print(f"{str1} => {result1.text}")  # 원본 텍스트와 번역 결과를 출력합니다.
except AttributeError:
    # 번역 중 AttributeError가 발생할 경우 예외를 처리합니다.
    print("Error: Translation failed. Please try again later.")  # 오류 메시지를 출력합니다.

from gtts import gTTS  # gTTS 모듈을 import하여 텍스트를 음성으로 변환할 수 있습니다.
text = result1.text  # 번역된 텍스트를 음성 변환을 위해 가져옵니다.

tts = gTTS(text=text, lang='ja')  # 번역된 텍스트를 일본어('ja') 음성으로 변환합니다.
tts.save(r"trans+gTTS.mp3")  # 변환된 음성을 trans+gTTS.mp3 파일로 저장합니다.

from playsound import playsound  # playsound 모듈을 import하여 음성을 재생할 수 있습니다.
file_path = r"trans+gTTS.mp3"  # 재생할 음성 파일의 경로를 설정합니다.
playsound("trans+gTTS.mp3")  # 저장된 음성 파일을 재생합니다.


** 학습내용 정리 **
1. googletrans를 사용한 텍스트 번역

googletrans.Translator를 이용해 텍스트를 자동으로 감지하고 지정한 언어(예: 일본어)로 번역하는 방법을 학습합니다.
translate() 메서드의 src와 dest 매개변수를 사용해 원본 언어와 대상 언어를 설정하는 방법을 익힙니다.

2. 예외 처리 (try-except)

번역 중 오류가 발생할 경우 try-except 블록을 통해 예외 상황을 처리하는 기법을 학습할 수 있습니다.
AttributeError를 처리하며, 실패 시 사용자에게 적절한 오류 메시지를 출력하는 방법을 배울 수 있습니다.

3. gTTS를 이용한 음성 생성

번역된 텍스트를 gTTS(Google Text-to-Speech) 모듈을 통해 음성 파일로 변환하는 방법을 학습합니다.
lang 매개변수를 사용하여 음성 언어를 설정하는 방법을 익힐 수 있습니다.

4. 음성 파일 재생

playsound 모듈을 사용해 생성된 MP3 음성 파일을 재생하는 방법을 배울 수 있습니다.
경로를 설정하고 playsound()를 호출하여 저장된 음성을 바로 실행하는 기법을 학습합니다.

5. 프로그램 구조화

텍스트 입력 → 번역 → 음성 변환 → 재생이라는 순차적인 흐름을 설계하며 프로그램의 논리적 구조를 학습합니다.
모듈화된 기능을 순서대로 실행하여 효율적으로 작업을 처리하는 방법을 배울 수 있습니다.

6. 파일 저장 및 경로 설정

변환된 음성을 파일로 저장하기 위해 save() 메서드를 사용하는 방법을 배울 수 있습니다.
파일 경로를 지정하고 확장자(.mp3)를 설정하여 데이터 관리 능력을 키울 수 있습니다.
