## Streamlit이란?

- **개념**: Streamlit은 파이썬(Python)을 기반으로 한 오픈소스 프레임워크로, 데이터 시각화 앱이나 대화형 웹 애플리케이션을 빠르고 쉽게 만들 수 있게 해줍니다. 주로 데이터 과학자나 개발자가 복잡한 프론트엔드 코딩(HTML, CSS, JavaScript) 없이도 직관적인 인터페이스를 구축할 때 사용합니다.
    - 특징: 코드 몇 줄로 실행 가능한 앱 생성, 실시간 인터랙션(버튼, 슬라이더 등) 지원, 데이터 분석 도구(Pandas, Matplotlib 등)와 잘 통합.
    - 예: 데이터 대시보드, 머신러닝 모델 데모, 간단한 웹 툴.



import streamlit as st  # Streamlit 라이브러리 import
import random  # 랜덤 모듈 import (메뉴를 무작위로 선택하기 위함)

# 한식, 중식, 일식 메뉴 리스트
menu_dict = {
    "한식": ["김치찌개", "된장찌개", "부대찌개", "삼겹살", "비빔밥", "떡볶이", "치킨"],
    "중식": ["짜장면", "짬뽕", "마라탕", "깐풍기", "양장피", "볶음밥", "탕수육"],
    "일식": ["초밥", "라멘", "가츠동", "텐동", "돈까스", "우동", "오코노미야끼"]
}

# 제목 및 설명
st.title("오늘의 점메추 Streamlit! ")  # 애플리케이션 제목 출력
st.write("점메추 == 만족하는 메뉴가 나올 때까지 버튼을 눌러보세요!")  # 설명 출력

# 사용자 카테고리 선택
category = st.radio("카테고리를 선택하세요", list(menu_dict.keys()))  # 라디오 버튼 생성

# 첫 번째 추천 버튼 (초록색)
if st.button("점심 메뉴 추천받기!"):
    selected_menu = random.choice(menu_dict[category])  # 선택한 카테고리에서 무작위로 메뉴 선택
    st.success(f"오늘의 추천 메뉴: **{selected_menu}**")  # 추천 메뉴를 초록색 메시지로 출력

# 다시 추천 버튼 (노란색)
if st.button("다시 추천받기"):
    selected_menu = random.choice(menu_dict[category])  # 선택한 카테고리에서 무작위로 메뉴 선택
    st.warning(f"오늘의 추천 메뉴: **{selected_menu}**")  # 추천 메뉴를 노란색 메시지로 출력


** 학습내용 정리 **

Streamlit을 사용한 간단한 웹 애플리케이션 구축

streamlit을 활용해 간단한 웹 인터페이스를 생성하고 배포하는 방법을 학습합니다. 
기본적인 제목, 설명, 버튼 등의 구성 요소를 추가하여 사용자와 상호작용할 수 있는 인터페이스를 구성합니다.

라디오 버튼으로 사용자 선택 처리

st.radio()를 사용해 카테고리를 선택할 수 있도록 하고, 해당 선택값에 따라 결과를 동적으로 변경하는 방법을 익힙니다.

버튼으로 이벤트 처리

st.button()을 활용해 버튼 클릭 이벤트를 처리하는 방법을 학습합니다. 
각 버튼 클릭 시 다른 행동을 수행하도록 설계하여 사용자 인터페이스를 직관적으로 구현합니다.

Python의 딕셔너리와 리스트를 활용한 데이터 관리

딕셔너리(menu_dict)를 사용해 카테고리를 키로, 메뉴 리스트를 값으로 관리하는 방식을 익힐 수 있습니다. 
random.choice()를 사용하여 리스트에서 무작위로 데이터를 선택하는 기법도 학습합니다.

Streamlit의 메시지 출력 기능

st.success()와 st.warning() 등을 사용하여 버튼 클릭 시 결과를 사용자에게 색상으로 구분하여 표시하는 방법을 배웁니다.

